server {
    listen 80;
    server_name www.example.com example.com;
    return 301 https://example.com$request_uri;
}

server {
    listen 443 ssl http2;
	listen [::]:443 ssl http2;
    server_name  www.example.com;

    #charset koi8-r;
    access_log  /var/log/nginx/log/host.access.log  main;

    #####SSL config#####
    
    #ssl_certificate /etc/nginx/cert/your_key.certchain.crt;
	#ssl_certificate_key /etc/nginx/cert/your_key.key;

	#ssl_session_cache shared:SSL:20m;
	#ssl_session_timeout 60m;

	#ssl_prefer_server_ciphers on;
	#ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5;

	#ssl_dhparam /etc/nginx/cert/dhparam.pem;

	#ssl_protocols TLSv1 TLSv1.1 TLSv1.2;

	#ssl_stapling on;
	#ssl_stapling_verify on;
	#ssl_trusted_certificate /etc/nginx/cert/trustchain.crt;
	#resolver 8.8.8.8 8.8.4.4;
	######End SSL config#######

    modsecurity on;
    location / {
    	root   /usr/share/nginx/html;
    	index  index.html index.htm;
    	#modsecurity_rules '
    	#	SecRuleEngine On
    	#	SecDebugLog /tmp/modsec_debug.log
    	#	SecDebugLogLevel 9
    	#	SecRule ARGS "@contains test" "id:1,phase:2,t:trim,block"
    	#';
    }
    
    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}
